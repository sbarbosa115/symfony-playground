<?php

declare(strict_types=1);

namespace App\Tests\Functional\Application\Controller;

use Psr\Container\ContainerInterface;
use Symfony\Bundle\FrameworkBundle\KernelBrowser;
use Symfony\Component\Stopwatch\Stopwatch;
use Symfony\Component\HttpFoundation\Request;
use App\Application\Controller\ContactController;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
use App\Tests\Functional\Application\Utils\MessengerBusInterfaceMock;

class ContactControllerTest extends WebTestCase
{
    public KernelBrowser $client;

    public function setUp(): void
    {
        $this->client = static::createClient();
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testCreate(): void
    {
        $watch = new Stopwatch();
        $watch->start('general');

        /** @var ContainerInterface $containerMock */
        $containerMock = $this->createMock(ContainerInterface::class);

        $controller = new ContactController($containerMock);

        $busMock = new MessengerBusInterfaceMock();

        $requestMock = new Request([], [], [], [], [], [], uniqid('TEST', true));

        $controller->create($busMock, $requestMock);

        self::assertEquals($busMock->spyCount, 1);
        $event = (string) $watch->stop('general');
        echo $event;
    }

    public function testCreatePost(): void
    {
        $watch = new Stopwatch();
        $watch->start('general');

        $this->client->request('POST', '/contact/', [
            'email' => 'test@example.com',
            'subject' => 'TEST',
            'content' => 'TESTS'
        ]);

        self::assertEquals(1, 1);
        $event = (string) $watch->stop('general');
        echo $event;
    }

}